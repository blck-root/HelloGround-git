"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var aws4_1 = require("aws4");
var _1 = require(".");
jest.mock("aws4");
describe("interceptor", function () {
    beforeEach(function () {
        aws4_1.sign.mockReset();
    });
    it("signs GET requests", function () {
        // Arrange
        var request = {
            method: "GET",
            url: "https://example.com/foobar"
        };
        var interceptor = _1.aws4Interceptor({
            region: "local",
            service: "execute-api"
        });
        // Act
        interceptor(request);
        // Assert
        expect(aws4_1.sign).toBeCalledWith({
            service: "execute-api",
            path: "/foobar",
            region: "local",
            host: "example.com"
        });
    });
    it("passes headers through", function () {
        // Arrange
        var headers = { "Content-Type": "application/json" };
        var request = {
            method: "GET",
            url: "https://example.com/foobar?foo=bar",
            headers: headers
        };
        var interceptor = _1.aws4Interceptor({
            region: "local",
            service: "execute-api"
        });
        // Act
        interceptor(request);
        // Assert
        expect(aws4_1.sign).toBeCalledWith({
            headers: headers,
            service: "execute-api",
            path: "/foobar?foo=bar",
            region: "local",
            host: "example.com"
        });
    });
    it("signs query paremeters in GET requests", function () {
        // Arrange
        var request = {
            method: "GET",
            url: "https://example.com/foobar?foo=bar"
        };
        var interceptor = _1.aws4Interceptor({
            region: "local",
            service: "execute-api"
        });
        // Act
        interceptor(request);
        // Assert
        expect(aws4_1.sign).toBeCalledWith({
            service: "execute-api",
            path: "/foobar?foo=bar",
            region: "local",
            host: "example.com"
        });
    });
    it("signs POST requests with an object payload", function () {
        // Arrange
        var data = { foo: "bar" };
        var request = {
            method: "POST",
            url: "https://example.com/foobar",
            data: data
        };
        var interceptor = _1.aws4Interceptor({
            region: "local",
            service: "execute-api"
        });
        // Act
        interceptor(request);
        // Assert
        expect(aws4_1.sign).toBeCalledWith({
            service: "execute-api",
            path: "/foobar",
            region: "local",
            host: "example.com",
            body: '{"foo":"bar"}'
        });
    });
    it("signs POST requests with a string payload", function () {
        // Arrange
        var data = "foobar";
        var request = {
            method: "POST",
            url: "https://example.com/foobar",
            data: data
        };
        var interceptor = _1.aws4Interceptor({
            region: "local",
            service: "execute-api"
        });
        // Act
        interceptor(request);
        // Assert
        expect(aws4_1.sign).toBeCalledWith({
            service: "execute-api",
            path: "/foobar",
            region: "local",
            host: "example.com",
            body: "foobar"
        });
    });
});
