# gzip-stream

To create a valid gzip from many individual streams first use createDeflatePart() which returns a through stream to convert your parts to the deflated part. when this through stream emits the 'end' event you should call its `metadata()` function which will give you back an object in the form of `{ len, zLen, digest }`

To create the final stream pass an array of objects in the form of `{ stream: your_readable_stream, len, zLen, digest }` to `createGzipStream()` and you'll get back a readable stream that also has a `zLen` property containing the total bytes of the compressed stream.
