{
  "_from": "gzip-stream@^1.1.2",
  "_id": "gzip-stream@1.1.2",
  "_inBundle": false,
  "_integrity": "sha512-r1nVZJGbHivD0RxzP+aGV4fs08dzh/IN5MCSR0bCa4FEPo7+azLiypR93f47NqzLZt7MSGf2f8vQ1PbfT3oNIg==",
  "_location": "/gzip-stream",
  "_phantomChildren": {},
  "_requested": {
    "type": "range",
    "registry": true,
    "raw": "gzip-stream@^1.1.2",
    "name": "gzip-stream",
    "escapedName": "gzip-stream",
    "rawSpec": "^1.1.2",
    "saveSpec": null,
    "fetchSpec": "^1.1.2"
  },
  "_requiredBy": [
    "/etcher-sdk"
  ],
  "_resolved": "https://registry.npmjs.org/gzip-stream/-/gzip-stream-1.1.2.tgz",
  "_shasum": "3422cd0d7465c8af331c07c45bb5003608c12ef8",
  "_spec": "gzip-stream@^1.1.2",
  "_where": "/root/node_modules/etcher-sdk",
  "author": "",
  "bugs": {
    "url": "https://github.com/balena-io-modules/gzip-stream/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "@balena/node-crc-utils": "^2.0.0",
    "combined-stream": "^1.0.8",
    "crc32-stream": "^4.0.0"
  },
  "deprecated": false,
  "description": "To create a valid gzip from many individual streams first use createDeflatePart() which returns a through stream to convert your parts to the deflated part. when this through stream emits the 'end' event you should call its `metadata()` function which will give you back an object in the form of `{ len, zLen, digest }`",
  "devDependencies": {
    "coffeescript": "^2.5.1"
  },
  "files": [
    "lib.js"
  ],
  "homepage": "https://github.com/balena-io-modules/gzip-stream",
  "license": "ISC",
  "main": "lib.js",
  "name": "gzip-stream",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/balena-io-modules/gzip-stream.git"
  },
  "scripts": {
    "prepare": "coffee -c lib.coffee"
  },
  "version": "1.1.2"
}
